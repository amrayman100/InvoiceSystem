@model Collection.DAL.Invoice

@{
    ViewBag.Title = "Edit";
    List<Collection.DAL.Customer> clist = ViewData["Customer_List"] as List<Collection.DAL.Customer>;
    List<Collection.DAL.Comment>
 Clist = ViewData["CommentList"] as List<Collection.DAL.Comment>;

}

@Html.Hidden("InvoiceId")

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit Invoice</h4>
        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.Invoice_No, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Invoice_No, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Invoice_No, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IssueDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IssueDate.Value.ToString("yyyy-MM-dd").Split(' ')[0], new { htmlAttributes = new {  type = "date" } })
                @Html.ValidationMessageFor(model => model.IssueDate.Value.ToString("yyyy-MM-dd").Split(' ')[0], "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Customer, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownListFor(
    model => model.Cust_ID, // Specifies where to store selected country Id
                      // It needs to be null for the default selection to work!

    new SelectList(clist, // IEnumerable<Country>, contains all countries loaded from a database
                   "ID",   // Use Country.Id as a data source for the values of dropdown items
                   "Name" // Use Country.Name as a data source for the text of dropdown items
                    // Specifies Australia (which has ID of 13) as the element selected by default
                   ),

    // Text of option that prompts user to select
    "- Please select Customer -"
)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CollectDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CollectDate.Value.ToString("yyyy-MM-dd").Split(' ')[0], new { htmlAttributes = new { @class = "datefield", type = "date" } })
                @Html.ValidationMessageFor(model => model.CollectDate.Value.ToString("yyyy-MM-dd").Split(' ')[0], "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Collected, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Collected, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Collected, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Suspended, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Suspended, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Suspended, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}



<button id="#add" onclick="openBox(@(ViewContext.RouteData.Values["id"]))" type="button" data-dismiss="modal" class="btn btn-default">Comment</button>


<div id="myModal" class="modal">

    <!-- Modal content -->
    <div class="modal-content">
        <span class="close">&times;</span>
        <table class="table table-bordered" id="commentTable">
            <thead>
                <tr>
                    <th>User Name</th>
                    <th>Comment</th>
                    <th>Date</th>
                    <th>Delete</th>

                </tr>
            </thead>
            <tbody>
              
            </tbody>
        </table>

        <div class="form-group">

            <textarea rows="10" cols="50" id="comm">
             
            </textarea>


        </div>
        <center>
            <button id="#add" onclick="hi()" type="button" data-dismiss="modal" class="btn btn-default">Add Comment</button>
        </center>

    </div>

</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section scripts{

    <script>


        // Get the modal
        var modal = document.getElementById('myModal');

        // Get the button that opens the modal
        var btn = document.getElementById("myBtn");

        // Get the <span> element that closes the modal
        var span = document.getElementsByClassName("close")[0];

        // When the user clicks the button, open the modal
        /*btn.onclick = function () {
            modal.style.display = "block";
        }*/

        function openBox(a) {
            modal.style.display = "block";
            document.getElementById('InvoiceId').val = a;
            var b = document.getElementById('InvoiceId').val;

            var invoiceid = document.getElementById('InvoiceId').val;
            $.ajax({
                type: "POST",
                url: '/Invoice/fillTable',
                data: { InvoiceId: invoiceid },
                type: "POST",

                dataType: 'json',

                success: function (data) {
                    $('#commentTable tbody > tr').remove();
                    $.each(data, function (index, item) {

                        // if (item.Invoice_ID == invoiceid) {
                        var rows = "<tr>" +

                            "<td>" + item.User.UserName + "</td>" +
                            "<td>" + item.Comment1 + "</td>" +
                            "<td>" + item.Date + "</td>" +
                            "<td>" + "<img onclick='del(" + item.ID + ")' src='/Content/images/delete.png'/>" + "</td>" +

                            +"</tr>";

                        $('#commentTable').append(rows);

                        //}

                    });
                },
                error: function (response) {

                }

            });

        }

        // When the user clicks on <span> (x), close the modal
        span.onclick = function () {
            modal.style.display = "none";
        }

        // When the user clicks anywhere outside of the modal, close it
        window.onclick = function (event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }

        function hi() {
            var comm = $("#comm").val();
            var invoiceid = document.getElementById('InvoiceId').val;
            $.ajax({
                type: "POST",
                url: '/Invoice/addComment',
                data: { InvoiceId: invoiceid, Comment: comm },
                type: "POST",

                dataType: 'json',

                success: function (data) {
                    $('#commentTable tbody > tr').remove();
                    $.each(data, function (index, item) {

                        if (item.Invoice_ID == invoiceid) {
                            var rows = "<tr>" +

                                "<td>" + item.User.UserName + "</td>" +
                                "<td>" + item.Comment1 + "</td>" +
                                "<td>" + item.Date + "</td>" +
                                "<td>" + "<img onclick='del(" + item.ID + ")' src='/Content/images/delete.png'/>" + "</td>" +

                                +"</tr>";

                            $('#commentTable').append(rows);

                        }

                    });
                },
                error: function (response) {
                    alert("Invalid, Please enter the data correctly");
                }

            });
        }



        function del(x) {

            //  alert(x + " Has Been Deleted");
            window.location.href = '/Invoice/DeleteComment/' + x;
        }




    </script>



}